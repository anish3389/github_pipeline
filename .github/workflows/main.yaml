name: Publish code

on:
  push:
    branches: [ INTERN-658-pipeline ]


env:
  terraformVersion: 1.8.2
  awsAccessKeyId: ${{ secrets.AWS_ACCESS_KEY_ID }}
  awsSecretAccessKey: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  awsSessionToken: ${{ secrets.AWS_SESSION_TOKEN }}
  awsRegion: us-east-1
  # awsIamRoleSessionDuration: 3600


jobs:
  # run_terraform:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v2
  #       with:
  #         terraform_version: ${{ env.terraformVersion }}
  #         terraform_wrapper: false

  #     - name: configure aws credentials
  #       uses: aws-actions/configure-aws-credentials@v3
  #       with:
  #         aws-access-key-id: ${{ env.awsAccessKeyId }}
  #         aws-secret-access-key: ${{ env.awsSecretAccessKey }}
  #         aws-session-token: ${{ env.awsSessionToken }}
  #         aws-region: ${{ env.awsRegion }}

  #     - name: Terraform Initialize
  #       id: init
  #       run: |
  #         cd terraform && terraform init

  #     - name: Terraform Apply
  #       id: apply
  #       run: |
  #         cd terraform && terraform apply -var-file=dev.tfvars -auto-approve -no-color

  run_ansible:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.awsAccessKeyId }}
          aws-secret-access-key: ${{ env.awsSecretAccessKey }}
          aws-session-token: ${{ env.awsSessionToken }}
          aws-region: ${{ env.awsRegion }}

      - name: Install ansible
        run: pip3 install boto3 ansible

      - name: Install ansible modules
        run: cd ansible && ansible-galaxy collection install -r requirements.yml

      - name: Run ansible
        run: cd ansible && ansible-playbook -i inventory_aws_ec2.yml playbook.yml